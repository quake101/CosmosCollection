name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Update version file
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        python -c "
        import re
        from datetime import datetime

        # Extract version from tag
        tag = '${{ github.ref }}'.replace('refs/tags/', '')

        # Read current version.py
        with open('version.py', 'r') as f:
            content = f.read()

        # Update version and build date
        content = re.sub(r'__version__ = \"[^\"]*\"', f'__version__ = \"{tag}\"', content)
        content = re.sub(r'__build_date__ = \"[^\"]*\"', f'__build_date__ = \"{datetime.now().strftime(\"%Y-%m-%d\")}\"', content)

        # Write back
        with open('version.py', 'w') as f:
            f.write(content)

        print(f'Updated version to {tag}')
        "

    - name: Build with PyInstaller
      run: |
        pyinstaller CosmosCollection.spec

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: CosmosCollection-Windows
        path: dist/CosmosCollection.exe

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: dist/CosmosCollection.exe
        draft: false
        prerelease: false
        generate_release_notes: true